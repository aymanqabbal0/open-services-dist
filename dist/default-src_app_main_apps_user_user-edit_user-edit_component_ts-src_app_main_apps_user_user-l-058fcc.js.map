{"version":3,"file":"default-src_app_main_apps_user_user-edit_user-edit_component_ts-src_app_main_apps_user_user-l-058fcc.js","mappings":"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","sources":["./src/app/main/apps/user/user-edit/user-edit.component.ts","./src/app/main/apps/user/user-edit/user-edit.component.html","./src/app/main/apps/user/user-limits/user-limits.component.ts","./src/app/main/apps/user/user-limits/user-limits.component.html"],"sourcesContent":["import {Component, OnInit, ViewEncapsulation, Input} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport { User1} from '../../../../auth/models';\r\nimport {RolesService} from '../../roles/roles.service';\r\nimport {UserService} from '../../../../auth/service';\r\n\r\n@Component({\r\n    selector: 'app-user-edit',\r\n    templateUrl: './user-edit.component.html',\r\n    styleUrls: ['./user-edit.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n    constructor(public activeModal: NgbActiveModal, private toastr: ToastrService,\r\n                private role: RolesService,\r\n                private user: UserService\r\n    ) {\r\n    }\r\n\r\n    @Input() oldUser: User1;\r\n\r\n    selectedRoles: string[] = [];\r\n\r\n    roles: { custom_role_id: number, custom_role_name: string }[];\r\n    loading = false;\r\n    form = new FormGroup({\r\n        'first_name': new FormControl(null, [Validators.required, Validators.minLength(3)]),\r\n        'last_name': new FormControl(null, [Validators.required, Validators.minLength(3)]),\r\n        'email': new FormControl(null, [Validators.required, Validators.email]),\r\n    });\r\n    taken = false;\r\n    submitted = false;\r\n\r\n    ngOnInit() {\r\n        this.role.getList().then(res => {\r\n            this.roles = res.data;\r\n            let rolesbyName = {};\r\n            this.roles.forEach(r => rolesbyName[r.custom_role_name] = r.custom_role_id);\r\n            this.selectedRoles = this.oldUser.roles.map(r => rolesbyName[r]);\r\n            console.log(this.selectedRoles);\r\n        });\r\n        this.form.setValue({\r\n            email: this.oldUser.email,\r\n            first_name: this.oldUser.first_name,\r\n            last_name: this.oldUser.last_name,\r\n        });\r\n    }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        this.taken = false;\r\n        if (this.form.invalid || (this.selectedRoles.length === 0)) {\r\n            return;\r\n        }\r\n        let o = {...this.form.value, role_ids: this.selectedRoles};\r\n        this.loading = true;\r\n        this.user.update(this.oldUser.id, o).then(res => {\r\n            if (res?.success) {\r\n                this.toastr.success('User Created Successfully 🎉');\r\n                this.activeModal.dismiss();\r\n                return;\r\n            }\r\n            this.toastr.error('Something went wrong.');\r\n        }).catch(err => {\r\n            console.log('err: ', err?.error?.error);\r\n            if (err?.error?.error === 'unique-email') {\r\n                this.toastr.error('Email already registered.');\r\n                this.taken = true;\r\n            } else {\r\n                this.toastr.error('Something went wrong.');\r\n            }\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n    }\r\n}\r\n","<div class=\"slideout-content\">\r\n    <div class=\"modal-header bg-transparent\">\r\n        <button (click)=\"activeModal.dismiss()\" aria-label=\"Close\" class=\"close cursor-pointer shadow\" type=\"button\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div [formGroup]=\"form\" class=\"modal-body\" >\r\n        <div>\r\n            <h3 class=\"mt-5 text-center mb-2\">Edit User Information</h3>\r\n            <div class=\"text-center\">Updating user details will receive a privacy audit.</div>\r\n        </div>\r\n        <div class=\"row\" >\r\n            <div class=\"col-md-6 mb-1\">\r\n                <label for=\"first_name\" class=\"font-weight-bold\">First Name </label>\r\n                <input formControlName=\"first_name\" id=\"first_name\" class=\"form-control w-100\" placeholder=\"John\">\r\n                <small class=\"text-danger\"  *ngIf=\"(submitted||form.controls.first_name.dirty)&&form.controls.first_name.errors?.minlength\">First name too short</small>\r\n                <small class=\"text-danger\"  *ngIf=\"(submitted||form.controls.first_name.dirty)&&form.controls.first_name.errors?.required\">First name is required</small>\r\n            </div>\r\n            <div class=\"col-md-6 mb-1\">\r\n                <label for=\"last_name\" class=\"font-weight-bold\">Last Name </label>\r\n                <input formControlName=\"last_name\" id=\"last_name\" class=\"form-control w-100\" placeholder=\"Doe\">\r\n                <small class=\"text-danger\"  *ngIf=\"(submitted||form.controls.last_name.dirty)&&form.controls.last_name.errors?.required\">Last name is required</small>\r\n                <small class=\"text-danger\"  *ngIf=\"(submitted||form.controls.last_name.dirty)&&form.controls.last_name.errors?.minlength\">Last name is required</small>\r\n            </div>\r\n            <div class=\"col-md-6 mb-1\">\r\n                <label for=\"email\" class=\"font-weight-bold\">Email</label>\r\n                <input formControlName=\"email\" id=\"email\" class=\"form-control w-100\" placeholder=\"example@domaine.com\">\r\n                <small *ngIf=\"taken\" class=\"font-small-2 text-danger\">This Email is already registered.</small>\r\n                <small class=\"text-danger\"  *ngIf=\"(submitted||form.controls.last_name.dirty)&&form.controls.last_name.errors?.required\">Service name is required</small>\r\n            </div>\r\n            <div class=\"col-md-6 mb-1\">\r\n                <label for=\"role\" class=\"font-weight-bold\">Select Role</label>\r\n                <ng-select  [ngModelOptions]=\"{standalone:true}\" [disabled]=\"!roles\" [multiple]=\"true\"\r\n                            name=\"role\" ngDefaultControl\r\n                            [(ngModel)]=\"selectedRoles\" id=\"role\" placeholder=\"Select Role\" >\r\n                    <ng-option *ngFor=\"let r of roles\" [value]=\"r.custom_role_id\" >{{r.custom_role_name}}</ng-option>\r\n                </ng-select>\r\n                <small class=\"text-danger\"  *ngIf=\"submitted&&(selectedRoles.length===0)\">Select at least 1 role.</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"mt-1 d-flex justify-content-center align-items-center\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-danger  mr-2\" (click)=\"activeModal.dismiss()\">Cancel</button>\r\n            <button class=\"btn btn-gradient-secondary\" [disabled]=\"loading\" (click)=\"save()\">\r\n                <span *ngIf=\"!loading\">Save</span>\r\n                <div class=\"spinner-border spinner-border-sm\" *ngIf=\"loading\" role=\"status\"></div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ServicesService} from '../../services/services.service';\r\nimport {Limits} from '../../tokens/token';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Constants} from '../../../../constants';\r\nimport {UserService} from '../../../../auth/service';\r\nimport {limitLabels, unlimited} from '../../../utils/limits';\r\n\r\n@Component({\r\n    selector: 'app-user-limits',\r\n    templateUrl: './user-limits.component.html',\r\n    styleUrls: ['./user-limits.component.scss']\r\n})\r\nexport class UserLimitsComponent implements OnInit {\r\n    constructor(public activeModal: NgbActiveModal, private toastr: ToastrService,\r\n                private users: UserService\r\n    ) {\r\n    }\r\n\r\n    @Input() limits: Limits;\r\n    @Input() userId: number;\r\n    @Output() newLimits = new EventEmitter<Partial<Limits>>();\r\n    form = new FormGroup({\r\n        'limit_daily': new FormControl(null, [Validators.required, Validators.min(-1)]),\r\n        'limit_weekly': new FormControl(null, [Validators.required, Validators.min(-1)]),\r\n        'limit_bi_weekly': new FormControl(null, [Validators.required, Validators.min(-1)]),\r\n        'limit_monthly': new FormControl(null, [Validators.required, Validators.min(-1)])\r\n    });\r\n    submitted = false;\r\n    loading = true;\r\n    loadingSave = false;\r\n    group = 'service';\r\n    labels = limitLabels;\r\n    selectedLimit = false as any;\r\n\r\n    ngOnInit() {\r\n        this.form.disable();\r\n        this.users.byId(this.userId).then(res => {\r\n            this.limits = res.login_limit;\r\n            this.form.setValue(this.limits);\r\n            this.selectedLimit = Object.keys(this.limits).find(k => this.limits[k] !== -1) || false;\r\n            this.form.enable();\r\n        }).catch(err => {\r\n            this.toastr.error(Constants.error);\r\n        }).finally(() => {\r\n            this.loading = false;\r\n        });\r\n    }\r\n\r\n    setLimit(key) {\r\n        if (this.labels[key]) {\r\n            let c: FormControl = this.form.controls[key];\r\n            if (c.value === -1) {\r\n                c.setValue(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    save() {\r\n        let l = this.form.value[this.selectedLimit];\r\n        this.form.setValue(unlimited);\r\n        if (this.selectedLimit) {\r\n            this.form.controls[this.selectedLimit].setValue(l);\r\n        }\r\n        this.submitted = true;\r\n        this.loadingSave = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n        this.users.updateLimits(this.userId, this.form.value).then(res => {\r\n            this.toastr.success('Updated User Limits successfully 🎉');\r\n            this.newLimits.emit(this.form.value);\r\n            this.activeModal.dismiss();\r\n        }).catch(err => {\r\n            this.toastr.error(Constants.error);\r\n        }).finally(() => {\r\n            this.loadingSave = false;\r\n        });\r\n    }\r\n}\r\n","<div class=\"slideout-content\">\r\n    <div class=\"modal-header bg-transparent\">\r\n        <button (click)=\"activeModal.dismiss()\" aria-label=\"Close\" class=\"close cursor-pointer shadow\" type=\"button\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body position-relative py-2\">\r\n        <div >\r\n            <h3 class=\"mt-5 text-center mb-2\">Manage Limits</h3>\r\n            <div class=\"text-center\">Updating limits details will receive a privacy audit.</div>\r\n        </div>\r\n        <div *ngIf=\"limits\" class=\"card card-body mt-2\">\r\n                        <ng-select (ngModelChange)=\"setLimit($event)\" [(ngModel)]=\"selectedLimit\">\r\n                            <ng-option [value]=\"false\">Unlimited</ng-option>\r\n                            <ng-option [value]=\"l.key\" *ngFor=\"let l of labels|keyvalue\">\r\n                                {{l.value}}\r\n                            </ng-option>\r\n                        </ng-select>\r\n                        <div [formGroup]=\"form\">\r\n                            <ng-container *ngFor=\"let l of labels|keyvalue\"  >\r\n                            <div *ngIf=\"selectedLimit===l.key\" >\r\n                                <div class=\"d-flex justify-content-center align-items-center\">\r\n                                    <input [formControlName]=\"l.key\" type=\"number\"\r\n                                           [id]=\"group+l.key\" class=\"form-control w-100 mt-2\"\r\n                                           [placeholder]=\"l.value\">\r\n                                </div>\r\n                                <div class=\"font-small-2 text-danger\"\r\n                                     *ngIf=\"(submitted||form.controls[l.key]?.dirty)&&(form.controls[l.key]?.errors?.required || form.controls[l.key]?.errors?.min)\">\r\n                                    Enter a valid number\r\n                                </div>\r\n                            </div>\r\n                            </ng-container>\r\n                        </div>\r\n        </div>\r\n        <app-spinner [loading]=\"form.disabled\"></app-spinner>\r\n        <div class=\"mt-1 d-flex align-items-center justify-content-center\">\r\n            <button [disabled]=\"loadingSave||form.invalid||loading\" class=\"btn btn-secondary\" (click)=\"save()\" rippleEffect>\r\n                <span *ngIf=\"!loadingSave\">\r\n                Save\r\n                </span>\r\n                <span class=\"spinner-border spinner-border-sm\" *ngIf=\"loadingSave\"></span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n"],"names":["FormControl","FormGroup","Validators","i0","UserEditComponent","constructor","activeModal","toastr","role","user","required","minLength","email","ngOnInit","getList","then","res","roles","data","rolesbyName","forEach","r","custom_role_name","custom_role_id","selectedRoles","oldUser","map","console","log","form","setValue","first_name","last_name","save","submitted","taken","invalid","length","o","value","role_ids","loading","update","id","success","dismiss","error","catch","err","finally","selectors","inputs","decls","vars","consts","template","ctx","EventEmitter","Constants","limitLabels","unlimited","UserLimitsComponent","users","min","disable","byId","userId","limits","login_limit","selectedLimit","Object","keys","find","k","enable","setLimit","key","labels","c","controls","l","loadingSave","updateLimits","newLimits","emit","outputs"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}